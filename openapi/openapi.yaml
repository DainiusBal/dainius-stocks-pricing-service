openapi: 3.0.0
info:
  title: Stock API
  version: 1.0.0
  description: API for managing stocks

servers:
  - url: https://dainius.balionis.com/sps/api/1.0.0
tags:
  - name: stock

paths:
  /api/v1/stocks:
    post:
      operationId: addStock
      summary: Add a new stock
      tags:
        - stock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      operationId: findStocksByTicker
      summary: Retrieve stocks matching the ticker
      tags:
        - stock
      parameters:
        - in: path
          name: ticker
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockList'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  '/api/v1/stocks/{ticker}/prices':
    parameters:
      - in: path
        name: ticker
        required: true
        schema:
          type: string
    post:
      operationId: addPrice
      summary: Add a new price for a stock
      tags:
        - stock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddPriceResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      operationId: findPricesByDateRange
      summary: Get prices for a stock within a date range
      tags:
        - stock
      parameters:
        - in: query
          name: fromDate
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: toDate
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPricesResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Stock:
      type: object
      properties:
        stockId:
          type: string
          format: UUID
        ticker:
          type: string
        description:
          type: string
        sharesOutstanding:
          type: integer

    StockList:
      type: array
      items:
        $ref: '#/components/schemas/Stock'

    Price:
      type: object
      properties:
        priceId:
          type: string
          format: UUID
        priceValue:
          type: number
        pricingDate:
          type: string
          format: date

    PriceList:
      type: array
      items:
        $ref: '#/components/schemas/Price'

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string

    AddPriceResponse:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
        stockId:
          type: string
          format: UUID

    FindPricesResponse:
      type: object
      properties:
        prices:
          $ref: '#/components/schemas/PriceList'
        stockId:
          type: string
          format: UUID
